/* Global reset */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family:Arial, Helvetica, sans-serif
}

$themes: (
  light: (
    background-primary: #e0e4ea,
    background-secondary: #FFFFFF,
    title: #0e121b,
    text-primary: #232530,
    text-secondary: #525866,
    button: #335cff,
    button-delete: #fb3748,
    button-text-options: #ffffff,
  ),
  dark: (
    background-primary: #2b303b,
    background-secondary: #232530,
    title: #ffffff,
    text-primary: #f3f5f8,
    text-secondary: #cacfd8,
    button: #335cff,
    button-delete: #fb3748,
    button-text-options: #C4C7C7,
  )
);

@mixin themify($themes) {
  @each $name, $values in $themes {
    .#{$name}-theme {
      background-color: map-get($values, background-primary);
      color: map-get($values, text-primary);

      //blocks
      main{
        background-color: map-get($values, background-secondary);
      }

      button {
        background-color: map-get($values, button);
        color: #ffffff;
        font-weight: 600;
        font-size: 15px;
      }

      a{
        color: map-get($values , text-secondary);
      }

      .delete-btn {
        background-color: map-get($values, button-delete);
      }

      //clasess

    
      .navigation-menu, .mobile-menu{
        background-color: map-get($values, background-secondary);
      }

      .header-desktop{
        background-color: map-get($values, background-secondary);
      }

      .header-mobile{
        background-color: map-get($values, background-primary);
      }

      .title{
        color: map-get($values , title );
      }

      .text-primary{
        color: map-get($values , text-primary);
      }

      .text-secondary{
        color: map-get($values , text-secondary);
      } 

      .toolbar-text-format-btn{
        background-color: map-get($values, button-text-options);
      }

      .note-item-tag{
        background-color: map-get($values, background-primary);
        color: map-get($values, text-primary);
      }
    }
  }
}

@function themed($map, $key) {
  @return map-get($map, $key);
}

/* Apply themes globally */
@include themify($themes);


//Grid

$columns: 24;
$gap: 16px; 

// Grid container
.grid {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

// Mixin for column span
@mixin grid-col($col-span) {
  grid-column: span $col-span;
}

// Responsive breakpoints
$breakpoints: (
  sm: 600px,
  md: 900px,
  lg: 1200px
);

// Mixin for responsive grid columns
@mixin responsive-grid($size, $col-span) {
  @media (min-width: map-get($breakpoints, $size)) {
    grid-column: span $col-span;
  }
}

//To not forget how to use it. I know you, myself... I know you

// Example usage in SCSS
// .col-12 {
//   @include grid-col(12); //
// }

// .col-24 {
//   @include grid-col(24);
// }

// Responsive example
// .col-responsive {
//   @include grid-col(24);
//   @include responsive-grid(md, 12);
//   @include responsive-grid(lg, 8);
// }